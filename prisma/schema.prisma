generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  image          String?
  role           Role      @default(user)
  accounts       Account[]
  Product        Product[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

enum Role {
  user
  admin
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Product {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  image       String?
  productName String
  quantity    Int
  cost        Int
  sell        Int
  createdBy   User          @relation(fields: [userId], references: [id])
  userId      String        @db.ObjectId
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  SellProduct SellProduct[]
}

model Invoice {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  invoiceId   Int           @unique
  invoiceDate DateTime
  customer    Customer      @relation(fields: [customerId], references: [id])
  customerId  String        @db.ObjectId
  products    SellProduct[]
  totalPrice  Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Customer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  address   String
  Invoice   Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model SellProduct {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  Invoice    Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId  String   @db.ObjectId
  product    Product  @relation(fields: [productId], references: [id])
  productId  String   @db.ObjectId
  quantity   Int
  totalPrice Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
